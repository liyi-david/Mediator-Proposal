# this file shows how composition part works

import reo.*;

connector <T:type> alternator (A:in T, B:in T, C: out T) {
    internals A1,A2,B1,B2,C1,C2;
    connections {
        reo.original.Replicator<T>(A,A1,A2);
        reo.original.Replicator<T>(B,B1,B2);
        reo.original.Merger<T>(C1,C2,C);

        reo.original.Sync<T>(A1,C1);
        reo.original.SyncDrain<T>(A2,B1);
        reo.original.Fifo1<T>(B2,C2);
    }
}

native component <T:type> sender (A: out T) ;
native component <T:type> receiver (A: in T) ;

connector <T:type> mixed () {
    internals A,B,C;
    connections {
        sender(A);
        sender(B);
        alternator(A,B,C);
        receiver(C);
    }
}